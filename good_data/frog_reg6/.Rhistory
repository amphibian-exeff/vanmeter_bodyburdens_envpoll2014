pth="I:/Dropbox/PRZM_NEW_MC_EFAST_RAIN_M"
rain = file(paste(pth,'/Out_Test/GA1LEVAP.MET', sep=""))
rain=read.table(rain)[,2]
App_Date=c(1,12,22,33,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64)+225
x_pos=c(226,seq(240, 340, 20),365)
x_lab=c("226","240","260","280","300","320","340","365")
ylim_pool=c(1.0,0.6,1.0,0.6,0.8,0.8)
yseq_pool=c(0.25,0.2,0.25,0.2,0.2,0.2)
ylab_pool_1=c("0.0","0.25","0.5","0.75","1.0")
ylab_pool_2=c("0.0","0.2","0.4","0.6")
ylab_pool_3=c("0.0","0.25","0.5","0.75","1.0")
ylab_pool_4=c("0.0","0.2","0.4","0.6")
ylab_pool_5=c("0.0","0.2","0.4","0.6","0.8")
ylab_pool_6=c("0.0","0.2","0.4","0.6","0.8")
pth="I:/Dropbox/PRZM_NEW_MC_EFAST_RAIN_M"
rain = file(paste(pth,'/Out_Test/GA1LEVAP.MET', sep=""))
rain=read.table(rain)[,2]
App_Date=c(1,12,22,33,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64)+225
x_pos=c(226,seq(240, 340, 20),365)
x_lab=c("226","240","260","280","300","320","340","365")
ylim_pool=c(1.0,0.6,1.0,0.6,0.8,0.8)
yseq_pool=c(0.25,0.2,0.25,0.2,0.2,0.2)
ylab_pool_1=c("0.0","0.25","0.5","0.75","1.0")
ylab_pool_2=c("0.0","0.2","0.4","0.6")
ylab_pool_3=c("0.0","0.25","0.5","0.75","1.0")
ylab_pool_4=c("0.0","0.2","0.4","0.6")
ylab_pool_5=c("0.0","0.2","0.4","0.6","0.8")
ylab_pool_6=c("0.0","0.2","0.4","0.6","0.8")
tiff(file = "Fig4_sub.tiff", width = 10000, height = 8000, units = "px", res = 800, compression = "lzw") #
par(mfrow=c(6,2), mar=c(3.1, 4.1, 2.1, 5.1))
i=1
for (j in c(1,2,5,6,8,11)) {
plot(Date_plot,sensitivity_out1[Date_plot,j], main=paste('',main_l[j],' 0-15cm depth',sep=""),type="l",
ylab='Sensitivity indices', xlab='Julian Date', cex=0.7, xaxt="n", yaxt="n", ylim=c(0, ylim_pool[i]))
lines(Date_plot,Tsensitivity_out1[Date_plot,j], col=2)
axis(side=1,at=x_pos, labels=x_lab)
axis(side=2,at=seq(0, ylim_pool[i], yseq_pool[i]), labels=eval(parse(text=paste('ylab_pool_', i, sep=""))),cex=0.7)
xline(App_Date,col='lightblue')
par(new=TRUE)
plot(Date_plot,rain[Date_plot],type="h",col='#ff000030',xaxt="n",yaxt="n",xlab="",ylab="")
axis(4)
mtext("Precipitation \n (cm/day)",side=4,line=3, cex=0.7)
plot(Date_plot,sensitivity_out6[Date_plot,j], main=paste('',main_l[j],' 75-90cm depth',sep=""),type="l",
ylab='Sensitivity indices', xlab='Julian Date', cex=0.7, xaxt="n", yaxt="n", ylim=c(0, ylim_pool[i]))
lines(Date_plot,Tsensitivity_out6[Date_plot,j], col=2)
axis(side=1,at=x_pos, labels=x_lab)
axis(side=2,at=seq(0, ylim_pool[i], yseq_pool[i]), labels=eval(parse(text=paste('ylab_pool_', i, sep=""))),cex=0.7)
xline(App_Date,col='lightblue')
par(new=TRUE)
plot(Date_plot,rain[Date_plot],type="h",col='#ff000030',xaxt="n",yaxt="n",xlab="",ylab="")
axis(4)
mtext("Precipitation \n (cm/day)",side=4,line=3, cex=0.7)
if (i==1) {
legend("topright",c("First","Total", "Percip.", "Apply"),
lwd=rep(0.4,4), col=c(1,2,'#ff000030','lightblue'),cex=0.90)
}
i=i+1
}
dev.off()
pth="I:/Dropbox/PRZM_NEW_MC_EFAST_RAIN_M"
rain = file(paste(pth,'/Out_Test/GA1LEVAP.MET', sep=""))
rain=read.table(rain)[,2]
App_Date=c(1,12,22,33,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64)+225
pth="D:/Dropbox/PRZM_NEW_MC_EFAST_RAIN_M"
rain = file(paste(pth,'/Out_Test/GA1LEVAP.MET', sep=""))
rain=read.table(rain)[,2]
App_Date=c(1,12,22,33,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64)+225
x_pos=c(226,seq(240, 340, 20),365)
x_lab=c("226","240","260","280","300","320","340","365")
ylim_pool=c(1.0,0.6,1.0,0.6,0.8,0.8)
yseq_pool=c(0.25,0.2,0.25,0.2,0.2,0.2)
ylab_pool_1=c("0.0","0.25","0.5","0.75","1.0")
ylab_pool_2=c("0.0","0.2","0.4","0.6")
ylab_pool_3=c("0.0","0.25","0.5","0.75","1.0")
ylab_pool_4=c("0.0","0.2","0.4","0.6")
ylab_pool_5=c("0.0","0.2","0.4","0.6","0.8")
ylab_pool_6=c("0.0","0.2","0.4","0.6","0.8")
tiff(file = "Fig4.tiff", width = 10000, height = 8000, units = "px", res = 800, compression = "lzw") #
par(mfrow=c(6,2), mar=c(3.1, 4.1, 2.1, 5.1))
i=1
for (j in c(1,2,5,6,8,11)) {
plot(Date_plot,sensitivity_out1[Date_plot,j], main=paste('',main_l[j],' 0-15cm depth',sep=""),type="l",
ylab='Sensitivity indices', xlab='Julian Date', cex=0.7, xaxt="n", yaxt="n", ylim=c(0, ylim_pool[i]))
lines(Date_plot,Tsensitivity_out1[Date_plot,j], col=2)
axis(side=1,at=x_pos, labels=x_lab)
axis(side=2,at=seq(0, ylim_pool[i], yseq_pool[i]), labels=eval(parse(text=paste('ylab_pool_', i, sep=""))),cex=0.7)
xline(App_Date,col='lightblue')
par(new=TRUE)
plot(Date_plot,rain[Date_plot],type="h",col='#ff000030',xaxt="n",yaxt="n",xlab="",ylab="")
axis(4)
mtext("Precipitation \n (cm/day)",side=4,line=3, cex=0.7)
plot(Date_plot,sensitivity_out2[Date_plot,j], main=paste('',main_l[j],' 15-30cm depth',sep=""),type="l",
ylab='Sensitivity indices', xlab='Julian Date', cex=0.7, xaxt="n", yaxt="n", ylim=c(0, ylim_pool[i]))
lines(Date_plot,Tsensitivity_out2[Date_plot,j], col=2)
axis(side=1,at=x_pos, labels=x_lab)
axis(side=2,at=seq(0, ylim_pool[i], yseq_pool[i]), labels=eval(parse(text=paste('ylab_pool_', i, sep=""))),cex=0.7)
xline(App_Date,col='lightblue')
par(new=TRUE)
plot(Date_plot,rain[Date_plot],type="h",col='#ff000030',xaxt="n",yaxt="n",xlab="",ylab="")
axis(4)
mtext("Precipitation \n (cm/day)",side=4,line=3, cex=0.7)
if (i==1) {
legend("topright",c("First","Total", "Percip.", "Apply"),
lwd=rep(0.4,4), col=c(1,2,'#ff000030','lightblue'),cex=0.90)
}
i=i+1
}
dev.off()
pth="D:/Dropbox/PRZM_NEW_MC_EFAST_RAIN_M"
rain = file(paste(pth,'/Out_Test/GA1LEVAP.MET', sep=""))
rain=read.table(rain)[,2]
App_Date=c(1,12,22,33,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64)+225
x_pos=c(226,seq(240, 340, 20),365)
x_lab=c("226","240","260","280","300","320","340","365")
ylim_pool=c(1.0,0.6,1.0,0.6,0.8,0.8)
yseq_pool=c(0.25,0.2,0.25,0.2,0.2,0.2)
ylab_pool_1=c("0.0","0.25","0.5","0.75","1.0")
ylab_pool_2=c("0.0","0.2","0.4","0.6")
ylab_pool_3=c("0.0","0.25","0.5","0.75","1.0")
ylab_pool_4=c("0.0","0.2","0.4","0.6")
ylab_pool_5=c("0.0","0.2","0.4","0.6","0.8")
ylab_pool_6=c("0.0","0.2","0.4","0.6","0.8")
tiff(file = "Fig4_sub.tiff", width = 10000, height = 8000, units = "px", res = 800, compression = "lzw") #
par(mfrow=c(6,2), mar=c(3.1, 4.1, 2.1, 5.1))
i=1
for (j in c(1,2,5,6,8,11)) {
plot(Date_plot,sensitivity_out1[Date_plot,j], main=paste('',main_l[j],' 0-15cm depth',sep=""),type="l",
ylab='Sensitivity indices', xlab='Julian Date', cex=0.7, xaxt="n", yaxt="n", ylim=c(0, ylim_pool[i]))
lines(Date_plot,Tsensitivity_out1[Date_plot,j], col=2)
axis(side=1,at=x_pos, labels=x_lab)
axis(side=2,at=seq(0, ylim_pool[i], yseq_pool[i]), labels=eval(parse(text=paste('ylab_pool_', i, sep=""))),cex=0.7)
xline(App_Date,col='lightblue')
par(new=TRUE)
plot(Date_plot,rain[Date_plot],type="h",col='#ff000030',xaxt="n",yaxt="n",xlab="",ylab="")
axis(4)
mtext("Precipitation \n (cm/day)",side=4,line=3, cex=0.7)
plot(Date_plot,sensitivity_out6[Date_plot,j], main=paste('',main_l[j],' 75-90cm depth',sep=""),type="l",
ylab='Sensitivity indices', xlab='Julian Date', cex=0.7, xaxt="n", yaxt="n", ylim=c(0, ylim_pool[i]))
lines(Date_plot,Tsensitivity_out6[Date_plot,j], col=2)
axis(side=1,at=x_pos, labels=x_lab)
axis(side=2,at=seq(0, ylim_pool[i], yseq_pool[i]), labels=eval(parse(text=paste('ylab_pool_', i, sep=""))),cex=0.7)
xline(App_Date,col='lightblue')
par(new=TRUE)
plot(Date_plot,rain[Date_plot],type="h",col='#ff000030',xaxt="n",yaxt="n",xlab="",ylab="")
axis(4)
mtext("Precipitation \n (cm/day)",side=4,line=3, cex=0.7)
if (i==1) {
legend("topright",c("First","Total", "Percip.", "Apply"),
lwd=rep(0.4,4), col=c(1,2,'#ff000030','lightblue'),cex=0.90)
}
i=i+1
}
dev.off()
tiff(file = "Fig4_sub2.tiff", width = 10000, height = 8000, units = "px", res = 800, compression = "lzw") #
par(mfrow=c(6,2), mar=c(3.1, 4.1, 2.1, 5.1))
i=1
for (j in c(1,2,5,6,8,11)) {
plot(Date_plot,sensitivity_out1[Date_plot,j], main=paste('',main_l[j],' All depths',sep=""),type="l",
ylab='Sensitivity indices', xlab='Julian Date', cex=0.7, xaxt="n", yaxt="n", ylim=c(0, ylim_pool[i]))
lines(Date_plot,sensitivity_out2[Date_plot,j], col=2)
lines(Date_plot,sensitivity_out3[Date_plot,j], col=3)
lines(Date_plot,sensitivity_out4[Date_plot,j], col=4)
lines(Date_plot,sensitivity_out5[Date_plot,j], col=5)
lines(Date_plot,sensitivity_out6[Date_plot,j], col=6)
axis(side=1,at=x_pos, labels=x_lab)
axis(side=2,at=seq(0, ylim_pool[i], yseq_pool[i]), labels=eval(parse(text=paste('ylab_pool_', i, sep=""))),cex=0.7)
xline(App_Date,col='lightblue')
par(new=TRUE)
plot(Date_plot,rain[Date_plot],type="h",col='#ff000030',xaxt="n",yaxt="n",xlab="",ylab="")
axis(4)
mtext("Precipitation \n (cm/day)",side=4,line=3, cex=0.7)
plot(Date_plot,Tsensitivity_out1[Date_plot,j], main=paste('',main_l[j],' All depths',sep=""),type="l",
ylab='Sensitivity indices', xlab='Julian Date', cex=0.7, xaxt="n", yaxt="n", ylim=c(0, ylim_pool[i]))
lines(Date_plot,Tsensitivity_out2[Date_plot,j], col=2)
lines(Date_plot,Tsensitivity_out3[Date_plot,j], col=3)
lines(Date_plot,Tsensitivity_out4[Date_plot,j], col=4)
lines(Date_plot,Tsensitivity_out5[Date_plot,j], col=5)
lines(Date_plot,Tsensitivity_out6[Date_plot,j], col=6)
axis(side=1,at=x_pos, labels=x_lab)
axis(side=2,at=seq(0, ylim_pool[i], yseq_pool[i]), labels=eval(parse(text=paste('ylab_pool_', i, sep=""))),cex=0.7)
xline(App_Date,col='lightblue')
par(new=TRUE)
plot(Date_plot,rain[Date_plot],type="h",col='#ff000030',xaxt="n",yaxt="n",xlab="",ylab="")
axis(4)
mtext("Precipitation \n (cm/day)",side=4,line=3, cex=0.7)
if (i==1) {
legend("topright",c("First","Total", "Percip.", "Apply"),
lwd=rep(0.4,4), col=c(1,2,'#ff000030','lightblue'),cex=0.90)
}
i=i+1
}
dev.off()
tiff(file = "Fig4_sub2.tiff", width = 10000, height = 8000, units = "px", res = 800, compression = "lzw") #
par(mfrow=c(6,2), mar=c(3.1, 4.1, 2.1, 5.1))
i=1
for (j in c(1,2,5,6,8,11)) {
plot(Date_plot,sensitivity_out1[Date_plot,j], main=paste('',main_l[j],' All depths',sep=""),type="l",
ylab='Sensitivity indices', xlab='Julian Date', cex=0.7, xaxt="n", yaxt="n", ylim=c(0, ylim_pool[i]))
lines(Date_plot,sensitivity_out2[Date_plot,j], col=2)
lines(Date_plot,sensitivity_out3[Date_plot,j], col=3)
lines(Date_plot,sensitivity_out4[Date_plot,j], col=4)
lines(Date_plot,sensitivity_out5[Date_plot,j], col=5)
lines(Date_plot,sensitivity_out6[Date_plot,j], col=6)
axis(side=1,at=x_pos, labels=x_lab)
axis(side=2,at=seq(0, ylim_pool[i], yseq_pool[i]), labels=eval(parse(text=paste('ylab_pool_', i, sep=""))),cex=0.7)
xline(App_Date,col='lightblue')
par(new=TRUE)
plot(Date_plot,rain[Date_plot],type="h",col='#ff000030',xaxt="n",yaxt="n",xlab="",ylab="")
axis(4)
mtext("Precipitation \n (cm/day)",side=4,line=3, cex=0.7)
plot(Date_plot,Tsensitivity_out1[Date_plot,j], main=paste('',main_l[j],' All depths',sep=""),type="l",
ylab='Sensitivity indices', xlab='Julian Date', cex=0.7, xaxt="n", yaxt="n", ylim=c(0, ylim_pool[i]))
lines(Date_plot,Tsensitivity_out2[Date_plot,j], col=2)
lines(Date_plot,Tsensitivity_out3[Date_plot,j], col=3)
lines(Date_plot,Tsensitivity_out4[Date_plot,j], col=4)
lines(Date_plot,Tsensitivity_out5[Date_plot,j], col=5)
lines(Date_plot,Tsensitivity_out6[Date_plot,j], col=6)
axis(side=1,at=x_pos, labels=x_lab)
axis(side=2,at=seq(0, ylim_pool[i], yseq_pool[i]), labels=eval(parse(text=paste('ylab_pool_', i, sep=""))),cex=0.7)
xline(App_Date,col='lightblue')
par(new=TRUE)
plot(Date_plot,rain[Date_plot],type="h",col='#ff000030',xaxt="n",yaxt="n",xlab="",ylab="")
axis(4)
mtext("Precipitation \n (cm/day)",side=4,line=3, cex=0.7)
if (i==1) {
legend("topright",c("1","2", "3", "4", "5", "6"),
lwd=rep(0.4,4), col=c(1,2,3,4,5,6),cex=0.90)
}
i=i+1
}
dev.off()
tiff(file = "Fig4_sub2.tiff", width = 10000, height = 8000, units = "px", res = 800, compression = "lzw") #
par(mfrow=c(6,2), mar=c(3.1, 4.1, 2.1, 5.1))
i=1
for (j in c(1,2,5,6,8,11)) {
plot(Date_plot,sensitivity_out1[Date_plot,j], main=paste('',main_l[j],' All depths',sep=""),type="l",
ylab='Sensitivity indices', xlab='Julian Date', cex=0.7, xaxt="n", yaxt="n", ylim=c(0, ylim_pool[i]))
#   lines(Date_plot,sensitivity_out2[Date_plot,j], col=2)
lines(Date_plot,sensitivity_out3[Date_plot,j], col=3)
#   lines(Date_plot,sensitivity_out4[Date_plot,j], col=4)
#   lines(Date_plot,sensitivity_out5[Date_plot,j], col=5)
lines(Date_plot,sensitivity_out6[Date_plot,j], col=6)
axis(side=1,at=x_pos, labels=x_lab)
axis(side=2,at=seq(0, ylim_pool[i], yseq_pool[i]), labels=eval(parse(text=paste('ylab_pool_', i, sep=""))),cex=0.7)
xline(App_Date,col='lightblue')
par(new=TRUE)
plot(Date_plot,rain[Date_plot],type="h",col='#ff000030',xaxt="n",yaxt="n",xlab="",ylab="")
axis(4)
mtext("Precipitation \n (cm/day)",side=4,line=3, cex=0.7)
plot(Date_plot,Tsensitivity_out1[Date_plot,j], main=paste('',main_l[j],' All depths',sep=""),type="l",
ylab='Sensitivity indices', xlab='Julian Date', cex=0.7, xaxt="n", yaxt="n", ylim=c(0, ylim_pool[i]))
#   lines(Date_plot,Tsensitivity_out2[Date_plot,j], col=2)
lines(Date_plot,Tsensitivity_out3[Date_plot,j], col=3)
#   lines(Date_plot,Tsensitivity_out4[Date_plot,j], col=4)
#   lines(Date_plot,Tsensitivity_out5[Date_plot,j], col=5)
lines(Date_plot,Tsensitivity_out6[Date_plot,j], col=6)
axis(side=1,at=x_pos, labels=x_lab)
axis(side=2,at=seq(0, ylim_pool[i], yseq_pool[i]), labels=eval(parse(text=paste('ylab_pool_', i, sep=""))),cex=0.7)
xline(App_Date,col='lightblue')
par(new=TRUE)
plot(Date_plot,rain[Date_plot],type="h",col='#ff000030',xaxt="n",yaxt="n",xlab="",ylab="")
axis(4)
mtext("Precipitation \n (cm/day)",side=4,line=3, cex=0.7)
if (i==1) {
legend("topright",c("1", "3", "6"),
lwd=rep(0.4,4), col=c(1,3,6),cex=0.90)
}
i=i+1
}
dev.off()
install.packages("mvoutlier")
library(mvoutlier)
frog_root<-"D:\\Dropbox\\Robin_data_test\\frog_reg6\\" #PC path
setwd(frog_root)
raw_data<-read.table(paste(frog_root,"good_data.csv",sep=""), header = TRUE, sep = ",") #Read data into a variable
raw_data_t1 = raw_data[which(raw_data$good==1),] #select good data
Chemical_selec_index=is.element(raw_data_t1$Chemical,c('Imidacloprid','Pendimethalin','Total Atrazine',
'Total Fipronil','Total Triadimefon'))
raw_data_t2 = raw_data_t1[Chemical_selec_index,] #select only five chemicals
row.names(raw_data_t2)<-NULL
raw_data_t2$bodyweight2=raw_data_t2$bodyweight/raw_data_t2$X  #average the weight by number of frogs
raw_data_t2$SA_cm2_2=raw_data_t2$SA_cm2/raw_data_t2$X  #average the surface area by number of frogs
mlrfrog = subset(raw_data_t2, select=c(Species, app_rate_g_cm2, AppFactor, TissueConc, SoilConc, logKow, BCF, VapPrs_mPa, Koc_Lab,
HabFac, Hlaw, bodyweight2, SA_cm2_2, molmass_gmol, Solat20C_mgL, Density_gcm3))
mlrfrog$Koc_Lab=as.numeric(as.character(mlrfrog$Koc_Lab)) #convert factors to numerics
mlrfrog$Koc_Lab=log(mlrfrog$Koc_Lab)
names(mlrfrog)[9]='logkoc'
mlrfrog$AppFactor=log(mlrfrog$AppFactor)
names(mlrfrog)[3]='logAppFactor'
mlrfrog$SoilConc=log(mlrfrog$SoilConc)
names(mlrfrog)[5]='logSoilConc'
mlrfrog$TissueConc=log(mlrfrog$TissueConc)
names(mlrfrog)[4]='logTissueConc'
mlrfrog$BCF=log(mlrfrog$BCF)
names(mlrfrog)[7]='logBCF'
test= subset(mlrfrog, select=-c(Species, HabFac))
aq.plot(test, alpha=0.01)
covr <- covMcd(test, alpha = 0.5)
dist <- mahalanobis(test, center = covr$center, cov = covr$cov)
covr <- covMcd(test, alpha = 0.5)
rstudio::viewData(test)
test= subset(mlrfrog, select=c(logAppFactor, logTissueConc, logSoilConc, logBCF))
covr <- covMcd(test, alpha = 0.5)
test= subset(mlrfrog, select=c(logBCF))
covr <- covMcd(test, alpha = 0.5)
test= subset(mlrfrog, select=c(logAppFactor, logBCF))
covr <- covMcd(test, alpha = 0.5)
test= subset(mlrfrog, select=c(logAppFactor, logTissueConc, logBCF))
covr <- covMcd(test, alpha = 0.5)
dist <- mahalanobis(test, center = covr$center, cov = covr$cov)
s <- sort(dist, index = TRUE)
q <- (0.5:length(dist))/length(dist)
qchi <- qchisq(q, df = ncol(test))
fix(s)
names(s)
s$ix
aq.plot(test, alpha=0.01)
a=aq.plot(test, alpha=0.01)
names(a)
bbb=a$outliers
fix(bbb)
mlrfrog$outliers=aq.plot(test, alpha=0.01)$outliers
rstudio::viewData(mlrfrog)
mlrfrog$MD=dist
rstudio::viewData(mlrfrog)
mlrfrog = subset(raw_data_t2, select=c(Species, app_rate_g_cm2, Chemical, AppFactor, TissueConc, SoilConc, logKow, BCF, VapPrs_mPa, Koc_Lab,
HabFac, Hlaw, bodyweight2, SA_cm2_2, molmass_gmol, Solat20C_mgL, Density_gcm3))
mlrfrog$Koc_Lab=as.numeric(as.character(mlrfrog$Koc_Lab)) #convert factors to numerics
mlrfrog$Koc_Lab=log(mlrfrog$Koc_Lab)
names(mlrfrog)[9]='logkoc'
mlrfrog$AppFactor=log(mlrfrog$AppFactor)
names(mlrfrog)[3]='logAppFactor'
mlrfrog$SoilConc=log(mlrfrog$SoilConc)
names(mlrfrog)[5]='logSoilConc'
mlrfrog$TissueConc=log(mlrfrog$TissueConc)
names(mlrfrog)[4]='logTissueConc'
mlrfrog$BCF=log(mlrfrog$BCF)
names(mlrfrog)[7]='logBCF'
test= subset(mlrfrog, select=c(logAppFactor, logTissueConc, logBCF))
mlrfrog$outliers=aq.plot(test, alpha=0.01)$outliers
covr <- covMcd(test, alpha = 0.5)
dist <- mahalanobis(test, center = covr$center, cov = covr$cov)
mlrfrog$MD=dist
s <- sort(dist, index = TRUE)
q <- (0.5:length(dist))/length(dist)
qchi <- qchisq(q, df = ncol(test))
rstudio::viewData(mlrfrog)
mlrfrog = subset(raw_data_t2, select=c(Species, app_rate_g_cm2, Chemical, AppFactor, TissueConc, SoilConc, logKow, BCF, VapPrs_mPa, Koc_Lab,
HabFac, Hlaw, bodyweight2, SA_cm2_2, molmass_gmol, Solat20C_mgL, Density_gcm3))
rstudio::viewData(mlrfrog)
mlrfrog = subset(raw_data_t2, select=c(Species, app_rate_g_cm2, Chemical, AppFactor, TissueConc, SoilConc, logKow, BCF, VapPrs_mPa, Koc_Lab,
HabFac, Hlaw, bodyweight2, SA_cm2_2, molmass_gmol, Solat20C_mgL, Density_gcm3))
mlrfrog$Koc_Lab=as.numeric(as.character(mlrfrog$Koc_Lab)) #convert factors to numerics
mlrfrog$Koc_Lab=log(mlrfrog$Koc_Lab)
names(mlrfrog)[10]='logkoc'
mlrfrog$AppFactor=log(mlrfrog$AppFactor)
names(mlrfrog)[4]='logAppFactor'
mlrfrog$SoilConc=log(mlrfrog$SoilConc)
names(mlrfrog)[6]='logSoilConc'
mlrfrog$TissueConc=log(mlrfrog$TissueConc)
names(mlrfrog)[5]='logTissueConc'
mlrfrog$BCF=log(mlrfrog$BCF)
names(mlrfrog)[8]='logBCF'
test= subset(mlrfrog, select=c(logAppFactor, logTissueConc, logBCF))
mlrfrog$outliers=aq.plot(test, alpha=0.01)$outliers
covr <- covMcd(test, alpha = 0.5)
dist <- mahalanobis(test, center = covr$center, cov = covr$cov)
mlrfrog$MD=dist
s <- sort(dist, index = TRUE)
q <- (0.5:length(dist))/length(dist)
qchi <- qchisq(q, df = ncol(test))
rstudio::viewData(mlrfrog)
test= subset(mlrfrog, select=c(logAppFactor, logBCF))
mlrfrog$outliers=aq.plot(test, alpha=0.01)$outliers
covr <- covMcd(test, alpha = 0.5)
dist <- mahalanobis(test, center = covr$center, cov = covr$cov)
mlrfrog$MD=dist
s <- sort(dist, index = TRUE)
q <- (0.5:length(dist))/length(dist)
qchi <- qchisq(q, df = ncol(test))
rstudio::viewData(mlrfrog)
data_Imi=mlrfrog[which(mlrfrog$Chemical=="Imidacloprid"),]
data_Pen=mlrfrog[which(mlrfrog$Chemical=="Pendimethalin"),]
data_Atr=mlrfrog[which(mlrfrog$Chemical=="Total Atrazine"),]
data_Fip=mlrfrog[which(mlrfrog$Chemical=="Total Fipronil"),]
data_Tri=mlrfrog[which(mlrfrog$Chemical=="Total Triadimefon"),]
rstudio::viewData(data_Atr)
test_Imi= subset(data_Imi, select=c(logAppFactor, logBCF))
test_Imi$outliers=aq.plot(test_Imi, alpha=0.01)$outliers
covr <- covMcd(test, alpha = 0.5)
dist <- mahalanobis(test, center = covr$center, cov = covr$cov)
test_Imi$MD=dist
s <- sort(dist, index = TRUE)
q <- (0.5:length(dist))/length(dist)
qchi <- qchisq(q, df = ncol(2))
test_Imi$qchi=qchi
test_Imi= subset(data_Imi, select=c(logAppFactor, logBCF))
test_Imi$outliers=aq.plot(test_Imi, alpha=0.01)$outliers
covr <- covMcd(test, alpha = 0.5)
dist <- mahalanobis(test, center = covr$center, cov = covr$cov)
test_Imi$MD=dist
dist <- mahalanobis(test, center = covr$center, cov = covr$cov)
library(mvoutlier)
frog_root<-"D:\\Dropbox\\Robin_data_test\\frog_reg6\\" #PC path
setwd(frog_root)
raw_data<-read.table(paste(frog_root,"good_data.csv",sep=""), header = TRUE, sep = ",") #Read data into a variable
raw_data_t1 = raw_data[which(raw_data$good==1),] #select good data
Chemical_selec_index=is.element(raw_data_t1$Chemical,c('Imidacloprid','Pendimethalin','Total Atrazine',
'Total Fipronil','Total Triadimefon'))
raw_data_t2 = raw_data_t1[Chemical_selec_index,] #select only five chemicals
row.names(raw_data_t2)<-NULL
raw_data_t2$bodyweight2=raw_data_t2$bodyweight/raw_data_t2$X  #average the weight by number of frogs
raw_data_t2$SA_cm2_2=raw_data_t2$SA_cm2/raw_data_t2$X  #average the surface area by number of frogs
mlrfrog = subset(raw_data_t2, select=c(Species, app_rate_g_cm2, Chemical, AppFactor, TissueConc, SoilConc, logKow, BCF, VapPrs_mPa, Koc_Lab,
HabFac, Hlaw, bodyweight2, SA_cm2_2, molmass_gmol, Solat20C_mgL, Density_gcm3))
mlrfrog$Koc_Lab=as.numeric(as.character(mlrfrog$Koc_Lab)) #convert factors to numerics
mlrfrog$Koc_Lab=log(mlrfrog$Koc_Lab)
names(mlrfrog)[10]='logkoc'
mlrfrog$AppFactor=log(mlrfrog$AppFactor)
names(mlrfrog)[4]='logAppFactor'
mlrfrog$SoilConc=log(mlrfrog$SoilConc)
names(mlrfrog)[6]='logSoilConc'
mlrfrog$TissueConc=log(mlrfrog$TissueConc)
names(mlrfrog)[5]='logTissueConc'
mlrfrog$BCF=log(mlrfrog$BCF)
names(mlrfrog)[8]='logBCF'
data_Imi=mlrfrog[which(mlrfrog$Chemical=="Imidacloprid"),]
data_Imi= subset(data_Imi, select=c(logAppFactor, logBCF))
data_Imi$outliers=aq.plot(data_Imi, alpha=0.01)$outliers
covr <- covMcd(data_Imi, alpha = 0.5)
dist <- mahalanobis(data_Imi, center = covr$center, cov = covr$cov)
data_Imi$MD=dist
s <- sort(dist, index = TRUE)
q <- (0.5:length(dist))/length(dist)
qchi <- qchisq(q, df = ncol(2))
data_Imi$qchi=qchi
data_Imi= subset(data_Imi, select=c(logAppFactor, logBCF))
data_Imi$outliers=aq.plot(data_Imi, alpha=0.01)$outliers
covr <- covMcd(data_Imi, alpha = 0.5)
rstudio::viewData(data_Imi)
library(mvoutlier)
frog_root<-"D:\\Dropbox\\Robin_data_test\\frog_reg6\\" #PC path
setwd(frog_root)
raw_data<-read.table(paste(frog_root,"good_data.csv",sep=""), header = TRUE, sep = ",") #Read data into a variable
raw_data_t1 = raw_data[which(raw_data$good==1),] #select good data
Chemical_selec_index=is.element(raw_data_t1$Chemical,c('Imidacloprid','Pendimethalin','Total Atrazine',
'Total Fipronil','Total Triadimefon'))
raw_data_t2 = raw_data_t1[Chemical_selec_index,] #select only five chemicals
row.names(raw_data_t2)<-NULL
raw_data_t2$bodyweight2=raw_data_t2$bodyweight/raw_data_t2$X  #average the weight by number of frogs
raw_data_t2$SA_cm2_2=raw_data_t2$SA_cm2/raw_data_t2$X  #average the surface area by number of frogs
mlrfrog = subset(raw_data_t2, select=c(Species, app_rate_g_cm2, Chemical, AppFactor, TissueConc, SoilConc, logKow, BCF, VapPrs_mPa, Koc_Lab,
HabFac, Hlaw, bodyweight2, SA_cm2_2, molmass_gmol, Solat20C_mgL, Density_gcm3))
mlrfrog$Koc_Lab=as.numeric(as.character(mlrfrog$Koc_Lab)) #convert factors to numerics
mlrfrog$Koc_Lab=log(mlrfrog$Koc_Lab)
names(mlrfrog)[10]='logkoc'
mlrfrog$AppFactor=log(mlrfrog$AppFactor)
names(mlrfrog)[4]='logAppFactor'
mlrfrog$SoilConc=log(mlrfrog$SoilConc)
names(mlrfrog)[6]='logSoilConc'
mlrfrog$TissueConc=log(mlrfrog$TissueConc)
names(mlrfrog)[5]='logTissueConc'
mlrfrog$BCF=log(mlrfrog$BCF)
names(mlrfrog)[8]='logBCF'
data_Imi=mlrfrog[which(mlrfrog$Chemical=="Imidacloprid"),]
test_Imi= subset(data_Imi, select=c(logAppFactor, logBCF))
data_Imi$outliers=aq.plot(test_Imi, alpha=0.01)$outliers
covr <- covMcd(test_Imi, alpha = 0.5)
dist <- mahalanobis(test_Imi, center = covr$center, cov = covr$cov)
data_Imi$MD=dist
s <- sort(dist, index = TRUE)
q <- (0.5:length(dist))/length(dist)
qchi <- qchisq(q, df = ncol(2))
rstudio::viewData(data_Imi)
s <- sort(dist, index = TRUE)
q <- (0.5:length(dist))/length(dist)
qchi <- qchisq(q, df = ncol(2))
q <- (0.5:length(dist))/length(dist)
q
qchisq(q, df = ncol(2))
qchi <- qchisq(q, df = 2)
data_Imi$qchi=qchi
rstudio::viewData(data_Imi)
?aq.plot
data_Pen=mlrfrog[which(mlrfrog$Chemical=="Pendimethalin"),]
test_Pen= subset(data_Pen, select=c(logAppFactor, logBCF))
data_Pen$outliers=aq.plot(test_Pen, alpha=0.01)$outliers
covr <- covMcd(test_Pen, alpha = 0.5)
dist <- mahalanobis(test_Pen, center = covr$center, cov = covr$cov)
data_Pen$MD=dist
rstudio::viewData(data_Pen)
data_Atr=mlrfrog[which(mlrfrog$Chemical=="Total Atrazine"),]
test_Atr= subset(data_Atr, select=c(logAppFactor, logBCF))
data_Atr$outliers=aq.plot(test_Atr, alpha=0.01)$outliers
covr <- covMcd(test_Atr, alpha = 0.5)
dist <- mahalanobis(test_Atr, center = covr$center, cov = covr$cov)
data_Atr$MD=dist
rstudio::viewData(data_Atr)
data_Fip=mlrfrog[which(mlrfrog$Chemical=="Total Fipronil"),]
test_Fip= subset(data_Fip, select=c(logAppFactor, logBCF))
data_Fip$outliers=aq.plot(test_Fip, alpha=0.01)$outliers
covr <- covMcd(test_Fip, alpha = 0.5)
dist <- mahalanobis(test_Fip, center = covr$center, cov = covr$cov)
data_Fip$MD=dist
rstudio::viewData(data_Fip)
data_Tri=mlrfrog[which(mlrfrog$Chemical=="Total Triadimefon"),]
test_Tri= subset(data_Tri, select=c(logAppFactor, logBCF))
data_Tri$outliers=aq.plot(test_Tri, alpha=0.01)$outliers
covr <- covMcd(test_Tri, alpha = 0.5)
dist <- mahalanobis(test_Tri, center = covr$center, cov = covr$cov)
data_Tri$MD=dist
rstudio::viewData(data_Tri)
